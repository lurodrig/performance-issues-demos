package lurodrig.perfomance.examples;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.nio.charset.Charset;
import java.nio.file.FileAlreadyExistsException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import lurodrig.performance.utils.Constants;
import lurodrig.performance.utils.Commons;
import de.svenjacobs.loremipsum.LoremIpsum;

/**
 * Servlet implementation class WaitingOnIO
 */
@WebServlet("/WaitingOnIO")
public class WaitingOnIO extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		PrintWriter out = response.getWriter();
		LoremIpsum loremIpsum = new LoremIpsum();
		String msg = loremIpsum.getWords(100);
		long millis = Commons.getMillis(request);
		String filePath = System.getProperty(Constants.TMP_DIR) + Constants.IO_FILE;
		File file = new File(filePath);
        BufferedWriter output = new BufferedWriter(new FileWriter(file));
        for (int i = 0; i < 1000; i++) {
        	output.write(msg);
        	Commons.sleep(WaitingOnIO.class.getName(), millis);
        }
        output.close();
        BufferedReader input = null;
        String sCurrentLine;
		input = new BufferedReader(new FileReader(filePath));
		while ((sCurrentLine = input.readLine()) != null) {
			out.println(sCurrentLine);
		}
		input.close();
		file.delete();
	}

}
